{% if mlComment != "" %}
{$mlComment}

{% endif %}
/** 
 * Generated by erpcgen {$erpcVersion} on {$todaysDate}.
 * 
 * AUTOGENERATED - DO NOT EDIT
 */ 

package {$groupPackage}.interfaces
{% if not empty(group.symbolsMap.structs) %}import {$groupPackage}.common.structs.*{% elif not empty(structs)%}import {$groupPackage}.common.structs.*{% endif %}
{% if not empty(enums)%}import {$groupPackage}.common.enums.*{% endif %}

{%  for inc in includes %}
import {$inc}
{%  endfor -- includes %}

import io.github.embeddedrpc.erpc.auxiliary.Reference

{% if interface.mlComment %}
{$interface.mlComment}
{% else %}
{% endif %}
interface I{$interface.name} {
    companion object {
        const val SERVICE_ID: Int = {$interface.id}
{% for fn in interface.functions %}
        const val {$upper(fn.name)}_ID: Int = {$fn.id}
{% endfor -- fn %}
    }

{% for fn in interface.functions %}
{% if fn.mlComment %}
{$fn.mlComment}
{% endif %}
    {$fn.prototype}
{% endfor -- fn %}
}



