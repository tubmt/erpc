{% if mlComment != "" %}
{$mlComment}

{% endif %}
/** 
 * Generated by erpcgen {$erpcVersion} on {$todaysDate}.
 * 
 * AUTOGENERATED - DO NOT EDIT
 */ 

{% if not empty(group.symbolsMap.structs) %}
{% for s in group.symbolsMap.structs %}
import '{$groupPackage}/common/structs/{$s.name}.dart';
{%  endfor -- group.symbolsMap.structs %}
{% elif not empty(structs)%}
{% for s in structs %}
import '{$groupPackage}/common/structs/{$s.name}.dart';
{%  endfor -- structs %}
{% endif %}

{% if not empty(enums)%}
{% for s in enums %}
import '{$groupPackage}/common/enums/{$s.name}.dart';
{%  endfor -- enums %}
{% endif %}

{%  for inc in includes %}
import {$inc};
{%  endfor -- includes %}

import 'package:erpc/erpc_lib.dart';

{% if interface.mlComment %}
{$interface.mlComment}
{% else %}
{% endif %}
abstract class I{$interface.name} {
    static const int SERVICE_ID = {$interface.id};
{% for fn in interface.functions %}
    static const int {$upper(fn.name)}_ID = {$fn.id};
{% endfor -- fn %}

{% for fn in interface.functions %}
{% if fn.mlComment %}
{$fn.mlComment}
{% endif %}
    {$fn.prototype};
{% endfor -- fn %}
}



