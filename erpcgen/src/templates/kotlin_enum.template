{% if mlComment != "" %}
{$mlComment}

{% endif %}
/** 
 * Generated by erpcgen {$erpcVersion} on {$todaysDate}.
 * 
 * AUTOGENERATED - DO NOT EDIT
 */

package {$groupPackage}.common.enums

import io.github.embeddedrpc.erpc.codec.Codec

{$>(enum.mlComment or enum.ilComment)}
enum class {$enum.name}(val value: Int) {
{%  for member in enum.members %}
{%  if member.mlComment %}
    {$member.mlComment}
{%  endif %}
    {$member.name}({$member.value}){% if !loop.last %},{% else %};{% endif %} {% if member.ilComment %}{$member.ilComment}{% endif %}
{%  endfor -- member %}

    fun write(codec: Codec) {
        codec.writeInt32(this.value)
    }

    companion object {

        fun get(value: Int): {$enum.name}? {
{%      for member in enum.members %}
            if (value == {$member.value}) {
                return {$member.name}
            }

{%      endfor %}
            return null
        }

        fun read(codec: Codec): {$enum.name} {
            return get(codec.readInt32())!!
        }
    }
}